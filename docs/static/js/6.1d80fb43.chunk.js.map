{"version":3,"sources":["config/layout.js","utils/index.js","api/role.js","components/upload-single-image/index.module.less","components/upload-single-image/UploadSingleImage.js","api/common.js","views/user/EditModal.js","views/user/User.js","views/user/index.js"],"names":["queryFormItemLayout","labelCol","xs","span","sm","wrapperCol","queryFormColLayout","xxl","lg","modalFormItemLayout","formatDateTime","date","moment","format","listToTree","list","id","key","parentKey","ret","filter","v","forEach","item","push","String","children","getRoles","params","axios","method","url","getTotalRoles","createRole","data","updateRole","deleteRole","module","exports","QINIU_PREFIX","Avatar","props","handleChange","info","file","status","onChange","response","hash","setState","loading","imageUrl","beforeUpload","Promise","resolve","reject","then","res","token","err","console","log","value","state","this","uploadButton","className","styles","icon","type","uploadClass","imgClass","imgStyle","uploadCls","classNames","listType","action","showUploadList","spinning","src","style","alt","Component","FormItem","Item","Option","EditModal","create","submitting","handleOk","e","preventDefault","form","validateFields","values","a","detail","updateUser","password","createUser","md5","success","onCreateSuccess","onEditSuccess","message","destroy","handleCancel","onClose","resetFields","visible","roles","getFieldDecorator","title","width","onOk","onCancel","destroyOnClose","maskClosable","confirmLoading","label","rules","required","initialValue","avatar","UploadSingleImage","userName","placeholder","allowClear","autoComplete","fullName","enable","Group","buttonStyle","Button","Array","isArray","map","mode","getPopupContainer","triggerNode","parentNode","role","name","User","deleting","total","page","size","sorter","queryTotalRoles","query","Object","assign","getUsers","handleSearch","getFieldsValue","handleReset","handleTableChange","pagination","_","current","pageSize","field","order","sortProp","sortOrder","handlePaginationChange","handleToggleEnable","record","patchUser","handleDelete","confirm","content","centered","deleteUser","handleCreate","formRef","handleCreateSuccess","handleEdit","handleEditSuccess","handleModalClose","modalProps","showTotal","showQuickJumper","showSizeChanger","onShowSizeChange","columns","align","dataIndex","render","text","length","checked","disabled","onClick","onSubmit","gutter","offset","htmlType","scroll","x","dataSource","rowKey","wrappedComponentRef","inst"],"mappings":"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","file":"static/js/6.1d80fb43.chunk.js","sourcesContent":["export const queryFormItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 5 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 19 }\r\n  }\r\n}\r\n\r\nexport const queryFormColLayout = {\r\n  xxl: 6,\r\n  lg: 8\r\n}\r\n\r\nexport const modalFormItemLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 14 }\r\n}","import moment from 'moment'\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format('YYYY-MM-DD')\r\n}\r\nexport const formatDateTime = (date) => {\r\n  return moment(date).format('YYYY-MM-DD HH:mm:ss')\r\n}\r\n\nexport function listToTree(list, id, key, parentKey) {\n  const ret = []\n  const temp = list.filter(v => v[parentKey] === id)\n  temp.forEach(item => {\n    ret.push({\n      ...item,\r\n      id: String(item.id),\n      children: listToTree(list, item[key], key, parentKey)\n    })\n  })\n  return ret\n}\r\n","import axios from '@/utils/axios'\r\n\r\nexport const getRoles = params => {\r\n  return axios({\r\n    method: 'get',\r\n    url: '/role',\r\n    params\r\n  })\r\n}\r\n\r\nexport const getTotalRoles = () => {\r\n  return axios({\r\n    method: 'get',\r\n    url: '/role/total'\r\n  })\r\n}\r\n\r\nexport const createRole = params => {\r\n  return axios({\r\n    method: 'post',\r\n    url: '/role',\r\n    data: params\r\n  })\r\n}\r\n\r\nexport const updateRole = params => {\r\n  return axios({\r\n    method: 'put',\r\n    url: '/role',\r\n    data: params\r\n  })\r\n}\r\n\r\nexport const deleteRole = params => {\r\n  return axios({\r\n    method: 'delete',\r\n    url: `/role/${params.id}`\r\n  })\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"index_icon__Yo_6K\",\"uploadClass\":\"index_uploadClass__2zinK\",\"imgClass\":\"index_imgClass__bIlZS\"};","import React, { Component } from 'react'\nimport { Upload, Icon, Spin } from 'antd'\nimport styles from './index.module.less'\nimport { getQiniuToken } from '@/api/common'\nimport classNames from 'classnames'\n\nconst QINIU_PREFIX = 'https://qiniu.test.qyhever.com/'\nconst QINIU_UPLOAD_URL = 'https://upload-z2.qiniup.com'\n\nclass Avatar extends Component {\n  constructor(props) {\n    super(props)\n    const { value } = props\n    this.params = {}\n    this.state = {\n      loading: false,\n      imageUrl: value || ''\n    }\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log('componentDidUpdate', prevProps, prevState)\n  //   if (prevProps.value !== this.props.value) {\n  //     this.setState({\n  //       imageUrl: this.props.value || ''\n  //     })\n  //   }\n  // }\n  \n  // UNSAFE_componentWillReceiveProps(nextProps) {\n  //   if (nextProps.value !== this.props.value) {\n  //     this.setState({\n  //       imageUrl: nextProps.value || ''\n  //     })\n  //   }\n  // }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.value !== state.value) {\n      return { imageUrl: props.value || '' }\n    }\n    return null\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === 'done') {\n      const { onChange } = this.props\n      const { response } = info.file\n      const url = QINIU_PREFIX + response.hash\n      onChange(url)\n      this.setState({ loading: false, imageUrl: url })\n    }\n  }\n  \n  beforeUpload = () => {\n    return new Promise((resolve, reject) => {\n      this.setState({ loading: true })\n      getQiniuToken().then(res => {\n        const { token } = res.data\n        this.params.token = token\n        resolve(true)\n      }).catch(err => {\r\n        console.log(err)\n        this.setState({ loading: false })\n        reject(err)\n      })\n    })\n  }\n\n  render() {\n    const { loading, imageUrl } = this.state\n    const uploadButton = (\n      <div>\n        {/* <Icon className={styles.icon} type={loading ? 'loading' : 'plus'} /> */}\n        {loading ? null : <Icon className={styles.icon} type=\"plus\" />}\n      </div>\n    )\n    const {\n      uploadClass=styles.uploadClass,\n      imgClass=styles.imgClass,\n      imgStyle\n    } = this.props\n    const uploadCls = classNames({\n      [uploadClass]: true,\n      'hover-mask': imageUrl\n    })\n    return (\n      <Upload\n        listType=\"picture-card\"\n        action={QINIU_UPLOAD_URL}\n        data={this.params}\n        className={uploadCls}\n        showUploadList={false}\n        beforeUpload={this.beforeUpload}\n        onChange={this.handleChange}\n      >\n        <Spin spinning={loading}></Spin>\n        {imageUrl ? <img src={imageUrl} style={imgStyle} className={imgClass} alt=\"avatar\" /> : uploadButton}\n        <div className=\"uploadr-mask\">\n          <Icon className={styles.icon} type=\"plus\" />\n        </div>\n      </Upload>\n    )\n  }\n}\n\nexport default Avatar\r\n","import axios from '@/utils/axios'\r\n\r\nexport function getQiniuToken() {\r\n  return axios({\r\n    method: 'get',\r\n    url: '/upload/qiniu_token'\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Form, Input, Radio, Select, message } from 'antd'\r\nimport md5 from 'md5'\r\nimport { modalFormItemLayout } from '@/config/layout'\r\nimport { createUser, updateUser } from '@/api/user'\r\nimport UploadSingleImage from '@/components/upload-single-image'\r\n\r\nconst { Item: FormItem } = Form\r\nconst { Option } = Select\r\n\r\n@Form.create()\r\nclass EditModal extends Component {\r\n  state = {\r\n    submitting: false\r\n  }\r\n  handleOk = (e) => {\r\n    e.preventDefault()\r\n    this.props.form.validateFields(async (err, values) => {\r\n      try{\r\n        if (err) return\r\n        const { detail } = this.props\r\n        this.setState({\r\n          submitting: true\r\n        })\r\n        let res = {}\r\n        if (detail.id) {\r\n          res = await updateUser({\r\n            ...values,\r\n            id: detail.id\r\n          })\r\n        } else {\r\n          const { password, ...params } = values\r\n          res = await createUser({\r\n            ...params,\r\n            password: md5(md5(password))\r\n          })\r\n        }\r\n        if (res.success) {\r\n          const {onCreateSuccess, onEditSuccess} = this.props\r\n          message.destroy()\r\n          message.success(detail.id ? '修改成功' : '添加成功')\r\n          detail.id ? onEditSuccess() : onCreateSuccess()\r\n        }\r\n      } catch(err){\r\n        console.log(err)\r\n      } finally {\r\n        this.setState({\r\n          submitting: false\r\n        })\r\n      }\r\n    })\r\n  }\r\n  handleCancel = () => {\r\n    this.props.onClose()\r\n    this.props.form.resetFields()\r\n  }\r\n  render() {\r\n    const { visible, roles = [], detail, form } = this.props\r\n    const { submitting } = this.state\r\n    const { getFieldDecorator } = form\r\n    const title = detail.id ? '编辑' : '添加'\r\n    return (\r\n      <Modal\r\n        title={title}\r\n        width={600}\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n        destroyOnClose={false}\r\n        maskClosable={false}\r\n        confirmLoading={submitting}\r\n      >\r\n        <Form>\r\n        \r\n          <FormItem label=\"头像\" {...modalFormItemLayout}>\r\n            {getFieldDecorator('avatar', {\r\n              rules: [{ required: true, message: '请上传头像!' }],\r\n              initialValue: detail.avatar || ''\r\n            })(\r\n              <UploadSingleImage />\r\n            )}\r\n          </FormItem>\r\n          \r\n          <FormItem label=\"账户名\" {...modalFormItemLayout}>\r\n            {getFieldDecorator('userName', {\r\n              rules: [{ required: true, message: '请输入账户名!' }],\r\n              initialValue: detail.userName || ''\r\n            })(\r\n              <Input placeholder=\"请输入账户名\" allowClear autoComplete=\"off\" />\r\n            )}\r\n          </FormItem>\r\n          \r\n          <FormItem label=\"真实姓名\" {...modalFormItemLayout}>\r\n            {getFieldDecorator('fullName', {\r\n              rules: [{ required: true, message: '请输入真实姓名!' }],\r\n              initialValue: detail.fullName || ''\r\n            })(\r\n              <Input placeholder=\"请输入真实姓名\" allowClear autoComplete=\"off\" />\r\n            )}\r\n          </FormItem>\r\n          \r\n          {!detail.id &&\r\n            <FormItem label=\"密码\" {...modalFormItemLayout}>\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '请输入密码!' }],\r\n                initialValue: detail.password || ''\r\n              })(\r\n                <Input type=\"password\" placeholder=\"请输入密码\" allowClear autoComplete=\"off\" />\r\n              )}\r\n            </FormItem>\r\n          }\r\n          \r\n          <FormItem label=\"状态\" {...modalFormItemLayout}>\r\n            {getFieldDecorator('enable', {\r\n              rules: [{ required: true, message: '请输入密码!' }],\r\n              initialValue: typeof detail.enable === 'undefined' ? true : detail.enable\r\n            })(\r\n              <Radio.Group buttonStyle=\"solid\">\r\n                <Radio.Button value={true}>启用</Radio.Button>\r\n                <Radio.Button value={false}>禁用</Radio.Button>\r\n              </Radio.Group>\r\n            )}\r\n          </FormItem>\r\n          \r\n          <FormItem label=\"角色\" {...modalFormItemLayout}>\r\n            {getFieldDecorator('role', {\r\n              rules: [{ required: true, message: '请选择角色!' }],\r\n              initialValue: Array.isArray(detail.roles) ? detail.roles.map(v => v.id) : []\r\n            })(\r\n              <Select\r\n                placeholder=\"请选择角色\"\r\n                mode=\"multiple\"\r\n                allowClear\r\n                getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                {roles.map(role =>\r\n                  <Option key={role.id} value={role.id}>{role.name}</Option>\r\n                )}\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n          \r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditModal\r\n","import React, { Component } from 'react'\r\nimport { Form, Row, Col, Input, Button, Select, Table, Switch, Pagination, message, Modal } from 'antd'\r\nimport { queryFormItemLayout, queryFormColLayout } from '@/config/layout'\r\nimport { formatDateTime } from '@/utils'\r\nimport { getUsers, patchUser, deleteUser } from '@/api/user'\r\nimport EditModal from './EditModal'\r\nimport { getTotalRoles } from '@/api/role'\r\n\r\nconst { Item: FormItem } = Form\r\nconst { Option } = Select\r\n\r\n@Form.create()\r\nclass User extends Component {\r\n  state = {\r\n    loading: false,\r\n    deleting: false,\r\n    list: [],\r\n    total: 0,\r\n    page: 1,\r\n    size: 10,\r\n    visible: false,\r\n    detail: {},\r\n    roles: []\r\n  }\r\n  form = {}\r\n  sorter = {}\r\n  componentDidMount() {\r\n    this.query()\r\n    this.queryTotalRoles()\r\n  }\r\n  queryTotalRoles = async () => {\r\n    try {\r\n      const res = await getTotalRoles()\r\n      if (res.success) {\r\n        const list = res.data || []\r\n        this.setState({\r\n          roles: list\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  query = async () => {\r\n    try {\r\n      this.setState({\r\n        loading: true\r\n      })\r\n      const params = Object.assign({}, this.form, this.sorter, {\r\n        page: this.state.page,\r\n        size: this.state.size\r\n      })\r\n      const res = await getUsers(params)\r\n      if (res.success) {\r\n        this.setState({\r\n          list: res.data.list || [],\r\n          total: res.data.total || 0\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  handleSearch = e => {\r\n    e.preventDefault()\r\n    const values = this.props.form.getFieldsValue()\r\n    this.form = values\r\n    this.query()\r\n  }\r\n  handleReset = () => {\r\n    this.props.form.resetFields()\r\n    this.form = {}\r\n    this.query()\r\n  }\r\n  handleTableChange = (pagination, _, sorter) => {\r\n    const { current, pageSize } = pagination\r\n    this.setState({\r\n      page: current || 1,\r\n      size: pageSize || 10\r\n    }, () => {\r\n      const params = {}\r\n      if (sorter.field && sorter.order) {\r\n        params.sortProp = sorter.field\r\n        params.sortOrder = sorter.order === 'ascend' ? 1 : -1\r\n      } else {\r\n        params.sortProp = null\r\n        params.sortOrder = null\r\n      }\r\n      this.sorter = params\r\n      this.query()\r\n    })\r\n  }\r\n  handlePaginationChange = (page, size) => {\r\n    this.setState({\r\n      page,\r\n      size\r\n    }, () => {\r\n      this.query()\r\n    })\r\n  }\r\n  handleToggleEnable = async (record) => {\r\n    try {\r\n      this.setState({\r\n        loading: true\r\n      })\r\n      const res = await patchUser({\r\n        id: record.id,\r\n        enable: !record.enable\r\n      })\r\n      if (res.success) {\r\n        const list = this.state.list.map(item => {\r\n          if (item.id === record.id) {\r\n            return {\r\n              ...item,\r\n              enable: !item.enable\r\n            }\r\n          }\r\n          return item\r\n        })\r\n        this.setState({\r\n          list\r\n        })\r\n        message.destroy()\r\n        message.success('操作成功')\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  handleDelete = (record) => {\r\n    Modal.confirm({\r\n      title: '温馨提示',\r\n      content: '确定要删除吗？',\r\n      centered: true,\r\n      onOk: () => {\r\n        this.setState({\r\n          deleting: true,\r\n          loading: true\r\n        }, async () => {\r\n          try {\r\n            const res = await deleteUser({\r\n              id: record.id\r\n            })\r\n            if (res.success) {\r\n              this.query()\r\n              message.destroy()\r\n              message.success('删除成功')\r\n            }\r\n          } catch (err) {\r\n            console.log(err)\r\n          } finally {\r\n            this.setState({\r\n              deleting: false,\r\n              loading: false\r\n            })\r\n          }\r\n        })\r\n      },\r\n      onCancel: () => {\r\n        // ...\r\n      }\r\n    })\r\n  }\r\n  handleCreate = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n    console.log(this.formRef)\r\n  }\r\n  handleCreateSuccess = () => {\r\n    this.setState({\r\n      visible: false,\r\n      page: 1,\r\n      size: 10\r\n    }, () => {\r\n      this.query()\r\n    })\r\n  }\r\n  handleEdit = (record) => {\r\n    this.setState({\r\n      visible: true,\r\n      detail: record\r\n    })\r\n  }\r\n  handleEditSuccess = () => {\r\n    this.setState({\r\n      visible: false,\r\n      detail: {}\r\n    }, () => {\r\n      this.query()\r\n    })\r\n  }\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n      detail: {}\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    const { loading, list, total, page, size, visible, detail, roles } = this.state\r\n    const modalProps = {\r\n      visible,\r\n      detail,\r\n      roles,\r\n      onCreateSuccess: this.handleCreateSuccess,\r\n      onEditSuccess: this.handleEditSuccess,\r\n      onClose: this.handleModalClose\r\n    }\r\n    const pagination = {\r\n      total,\r\n      current: page,\r\n      pageSize: size,\r\n      showTotal: total => `共${total}条`,\r\n      showQuickJumper: true,\r\n      showSizeChanger: true,\r\n      onChange: this.handlePaginationChange,\r\n      onShowSizeChange: this.handlePaginationChange\r\n    }\r\n    const columns = [{\r\n      title: '头像',\r\n      align: 'center',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: text => <img src={text} className=\"avatar\" alt=\"加载失败\" />\r\n    }, {\r\n      title: '用户名',\r\n      align: 'center',\r\n      dataIndex: 'userName',\r\n      key: 'userName'\r\n    }, {\r\n      title: '真实姓名',\r\n      align: 'center',\r\n      dataIndex: 'fullName',\r\n      key: 'fullName'\r\n    }, {\r\n      title: '角色',\r\n      align: 'center',\r\n      dataIndex: 'roles',\r\n      key: 'roles',\r\n      render: (text) => {\r\n        if (text && text.length) {\r\n          return text.map(role =>\r\n            <span key={role.id}>{role.name}<br/></span>\r\n          )\r\n        }\r\n        return <span>-</span>\r\n      }\r\n    }, {\r\n      title: '启用状态',\r\n      align: 'center',\r\n      dataIndex: 'enable',\r\n      key: 'enable',\r\n      render: (text, record) => {\r\n        const disabled = record.userName === 'admin'\r\n        if (disabled) {\r\n          return <span>-</span>\r\n        }\r\n        return <Switch checked={text} disabled={loading} onChange={value => this.handleToggleEnable(record, value)} />\r\n      }\r\n    }, {\r\n      title: '添加时间',\r\n      align: 'center',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      sorter: true,\r\n      // sortOrder: sortOrder,\r\n      render: (text) => <span>{text ? formatDateTime(text) : '-'}</span>\r\n    }, {\r\n      title: '修改时间',\r\n      align: 'center',\r\n      dataIndex: 'updatedAt',\r\n      key: 'updatedAt',\r\n      sorter: true,\r\n      // sortOrder: sortOrder,\r\n      render: (text) => <span>{text ? formatDateTime(text) : '-'}</span>\r\n    }, {\r\n      title: '操作',\r\n      align: 'center',\r\n      dataIndex: 'operation',\r\n      key: 'operation',\r\n      render: (_, record) => {\r\n        if (record.userName === 'admin') {\r\n          return <span>-</span>\r\n        }\r\n        return (\r\n          <span>\r\n            <Button type=\"link\" onClick={() => this.handleEdit(record)}>编辑</Button>\r\n            <Button type=\"link\" disabled={this.state.deleting} onClick={() => this.handleDelete(record)}>删除</Button>\r\n          </span>\r\n        )\r\n      }\r\n    }]\r\n    return (\r\n      <div className=\"com-container\">\r\n        <Form onSubmit={this.handleSearch}>\r\n          <Row gutter={24}>\r\n\r\n            <Col {...queryFormColLayout}>\r\n              <FormItem label=\"用户名\" {...queryFormItemLayout}>\r\n                {getFieldDecorator('userName', {\r\n                  initialValue: ''\r\n                })(\r\n                  <Input placeholder=\"请输入用户名\" allowClear autoComplete=\"off\" />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n\r\n            <Col {...queryFormColLayout}>\r\n              <FormItem label=\"真实姓名\" {...queryFormItemLayout}>\r\n                {getFieldDecorator('fullName', {\r\n                  initialValue: ''\r\n                })(\r\n                  <Input placeholder=\"请输入真实姓名\" allowClear autoComplete=\"off\" />\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n\r\n            <Col {...queryFormColLayout}>\r\n              <FormItem label=\"启用状态\" {...queryFormItemLayout}>\r\n                {getFieldDecorator('enable', {\r\n                  initialValue: ''\r\n                })(\r\n                  <Select\r\n                    placeholder=\"请选择状态\"\r\n                    allowClear\r\n                    getPopupContainer={triggerNode => triggerNode.parentNode}>\r\n                    <Option value=\"\">全部</Option>\r\n                    <Option value={1}>启用</Option>\r\n                    <Option value={0}>禁用</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n\r\n            <Col {...queryFormColLayout}>\r\n              <FormItem wrapperCol={{offset: 2}}>\r\n                <Button type=\"primary\" htmlType=\"submit\" disabled={loading} onSubmit={this.handleSearch}>查询</Button>\r\n                <Button onClick={this.handleReset} disabled={loading}>重置</Button>\r\n                <Button type=\"primary\" onClick={this.handleCreate}>添加</Button>\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Form>\r\n        <div className=\"table-container\">\r\n          <Table\r\n            scroll={{ x: 1376 }}\r\n            loading={loading}\r\n            dataSource={list}\r\n            columns={columns}\r\n            rowKey=\"id\"\r\n            pagination={false}\r\n            onChange={this.handleTableChange}\r\n          />\r\n        </div>\r\n        <div className=\"pagination-container\">\r\n          <Pagination {...pagination} />\r\n        </div>\r\n        <EditModal {...modalProps} wrappedComponentRef={(inst) => this.formRef = inst} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User\r\n","export { default } from './User'\r\n"],"sourceRoot":""}